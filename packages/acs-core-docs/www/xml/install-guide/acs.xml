<sect1 id="acs" xreflabel="Installing the ArsDigita Community System v 4.0">
<title>Installing the ArsDigita Community System v 4.0</title>

<sect2 id="install-acs-download">
<title>Downloading the ACS</title>


    <itemizedlist>
      <listitem><para>
        Download the following from the ArsDigita <ulink url="http://www.arsdigita.com/download/">download</ulink> page to the
        <phrase>/tmp</phrase> directory: 

        </para>

        <itemizedlist>
          <listitem><para>
            ArsDigita Community System v 4.0.

            
          </para></listitem>
        </itemizedlist>
      </listitem>

      <listitem><para>
        Login as nsadmin and uncompress the downloaded components into
        <computeroutput>/web</computeroutput>. Substitute the correct file name into the line
        below. Tip: If you type <computeroutput>acs-</computeroutput> and then press the
        <phrase>TAB</phrase> key, your shell should complete the file name
        for you. 

        
<programlisting>
$ su - nsadmin
; Enter nsadmin&#39;s password.
$ cd /tmp
$ tar -xzvf acs-4.0.tar.gz --directory=/web

; Stay logged in as <phrase>nsadmin</phrase>.
   
</programlisting>
      </para></listitem>

      <listitem><para>
        You should now have an <phrase>acs/</phrase> directory tree in
        <phrase>/web</phrase>. Rename this directory to whatever you want
        your web service to be identified as. The name of your web service is
        referred to as the <emphasis>service_name</emphasis>. This identification is used
        internally by AOLserver to differentiate your services from one
        another. A service name should be a single word, <emphasis>letters and
        numbers only</emphasis>. If the name of your site is one word, that would
        be a good choice. For example &quot;arfdigita&quot; is the service
        name for the <ulink url="http://arfdigita.org/">ArfDigita.org</ulink>
        community. </para>
<programlisting>
$ cd /web
$ mv acs <emphasis>service_name</emphasis>
   
</programlisting>
      </listitem>
    </itemizedlist>

    </sect2>

<sect2 id="install-acs-prepare-oracle">
<title>Prepare Oracle for ACS</title>


    <para>You should be logged on as <phrase>nsadmin</phrase> for this step and
    you should make sure that <phrase>nsadmin</phrase> is in the
    <phrase>dba</phrase> group.</para>

    <itemizedlist>
      <listitem><para>
        Verify nsadmin membership by typing <phrase>groups</phrase> when you
        login: 
<programlisting>
$ groups
nsadmin dba web
   
</programlisting>
        If you do not see these groups, take the following action: 
<programlisting>
$ su -      # Enter root password
# usermod -g nsadmin -G dba,web nsadmin
   
</programlisting>
        If you get an error about an undefined group, then add that group
        manually: 
<programlisting>
# groupadd dba
# groupadd nsadmin
# groupadd web
   
</programlisting>
        Make sure to logout as <computeroutput>root</computeroutput> when you are finished with
        this step and log back in as <computeroutput>nsadmin</computeroutput>. 

        
      </para></listitem>

      <listitem><para>
        Connect to Oracle using <computeroutput>svrmgrl</computeroutput> and login:

        
<programlisting>
$ svrmgrl

SVRMGR&gt; connect internal
Connected.
   
</programlisting>
      </para></listitem>

      <listitem><para>
        Determine where the system tablespaces are stored: 
<programlisting>
SVRMGR&gt;  select file_name from dba_data_files;
   
</programlisting>
        Example results: 
<programlisting>
/ora8/m01/app/oracle/oradata/ora8/system01.dbf
/ora8/m01/app/oracle/oradata/ora8/tools01.dbf
/ora8/m01/app/oracle/oradata/ora8/rbs01.dbf
/ora8/m01/app/oracle/oradata/ora8/temp01.dbf
/ora8/m01/app/oracle/oradata/ora8/users01.dbf
/ora8/m01/app/oracle/oradata/ora8/indx01.dbf
/ora8/m01/app/oracle/oradata/ora8/drsys01.dbf
   
</programlisting>
      </para></listitem>

      <listitem><para>
        Using the above output, you should determine where to store your
        tablespace. As a general rule, you&#39;ll want to store your
        tablespace on a mount point under the <computeroutput>/ora8</computeroutput> directory
        that is separate from the Oracle system data files. By default, the
        Oracle system is on <computeroutput>m01</computeroutput>, so we will use
        <computeroutput>m02</computeroutput>. This enables your Oracle system and database files
        to be on separate disks for optimized performance. For more
        information on such a configuration, see <ulink url="http://www.arsdigita.com/books/panda/databases-choosing">Chapter
        12</ulink> of <ulink url="http://www.arsdigita.com/books/panda/">Philip&#39;s book</ulink>.
        For this example, we&#39;ll use <computeroutput>/ora8/m02/oradata/ora8/</computeroutput>.
        

        
      </para></listitem>

      <listitem><para>
        Create the directory for the datafile; to do this, exit from
        <computeroutput>svrmgrl</computeroutput> and login as <phrase>root</phrase> for this
        step: </para>
<programlisting>
SVRMGR&gt; exit
$ su -
; Enter root password.
# mkdir -p /ora8/m02/oradata/ora8/
# chown nsadmin.web /ora8/m02/oradata/ora8
# chmod 775 /ora8/m02/oradata/ora8
# exit
$
   
</programlisting>
      </listitem>

      <listitem><para>
        As <phrase>nsadmin</phrase>, create a tablespace for the service. It
        is important that the tablespace can <computeroutput>autoextend</computeroutput>. This
        allows the tablespace&#39;s storage capacity to grow as the size of
        the data grows. We set the pctincrease to be a very low value so that
        our extents won&#39;t grow geometrically. We do not set it to 0 at
        the tablespace level because this would affect Oracle&#39;s ability
        to automatically coalesce free space in the tablespace. </para>
<programlisting>
$ svrmgrl

SVRMGR&gt; connect internal;
SVRMGR&gt; create tablespace <emphasis>service_name</emphasis> datafile &#39;/ora8/m02/oradata/ora8/<emphasis>service_name</emphasis>01.dbf&#39; size 50m autoextend on default storage (pctincrease 1);
   
</programlisting>
      </listitem>

      <listitem><para>
        Create a database user for this service. Give the user access to the
        tablespace and rights to connect. (Substitute
        <computeroutput>database_password</computeroutput> with the appropriate password.)</para>

        <para><phrase>Write down what you specify as <emphasis>service_name</emphasis> and
        <emphasis>database_password</emphasis></phrase>. You will need this information
        for configuring exports and AOLserver.</para>
<programlisting>
SVRMGR&gt; create user <emphasis>service_name</emphasis> identified by <emphasis>database_password</emphasis> default tablespace <emphasis>service_name</emphasis>
temporary tablespace temp quota unlimited on <emphasis>service_name</emphasis>;
SVRMGR&gt; grant connect, resource, ctxapp, javasyspriv, query rewrite to <emphasis>service_name</emphasis>;
SVRMGR&gt; revoke unlimited tablespace from <emphasis>service_name</emphasis>;
SVRMGR&gt; alter user <emphasis>service_name</emphasis> quota unlimited on <emphasis>service_name</emphasis>;
SVRMGR&gt; exit;
   
</programlisting>

        <para>Your table space is now ready. In case you are trying to delete a
        previous ACS installation, consult these commands in <xref linkend="install-acs-delete-tablespace"/> below.
      </para></listitem>

      <listitem><para>
        Make sure that you can login to Oracle using your
        <emphasis>service_name</emphasis> account: </para>
<programlisting>
$ sqlplus <emphasis>service_name</emphasis>/<emphasis>database_password</emphasis>
SQL&gt; select sysdate from dual;

SYSDATE
----------
2000-06-11

SQL&gt; exit
   
</programlisting>

        <para>You should see today&#39;s date in a format &#39;YYYY-MM-DD.&#39;
        If you can&#39;t login, try redoing step 1 again. If the date is in
        the wrong format, make sure you followed the steps outlined in the <ulink url="oracle.html#wrongdates">Oracle documentation</ulink>.
      </para></listitem>
    </itemizedlist>
 

    </sect2>

<sect2 id="install-acs-configure-aol">
<title>Configuring AOLserver</title>


    <para>The AOLserver architecture lets you run an arbitrary number of virtual
    servers. A virtual server is an HTTP service running on a specific port,
    e.g. port 80. In order for the ACS to work, you need to configure a
    virtual server. Because the process is involved, we have prepared a
    sample virtual server configuration file.</para>

    <itemizedlist>
      <listitem><para>
        Allot an IP address: You must know what IP address has been assigned
        to your web service. If you don&#39;t know, contact your system
        administrator and find out. If you do not have a network connection,
        use <computeroutput>localhost 127.0.0.1</computeroutput> Once you have installed a
        virtual server as described below, you should notify your sysadmin
        that you have claimed this IP. 

        
      </para></listitem>

      <listitem><para>
        Save the template configuration file <ulink url="files/template-ini.ini">template-ini.ini</ulink> into
        <phrase>/tmp</phrase>. 

        
      </para></listitem>

      <listitem><para>
        Login as <phrase>nsadmin</phrase>: </para>
<programlisting>
$ cp /tmp/template-ini.ini /home/aol31/<emphasis>service_name</emphasis>.ini
   
</programlisting>

        
     </listitem>

      <listitem><para>
        Replace the following variables in the file as dictated below using a
        text editor. You must specify a service port for your web server to
        run. The standard HTTP port number is port 80. If you are already
        running a web server (such as <ulink url="http://www.apache.org/">Apache</ulink>, then port 80 is likely no
        longer available. We recommend setting the service port to
        <computeroutput>8080</computeroutput> for a first time installation. No other service
        uses this port and special access is not required to use it. If you
        want to use port 80, please read <xref linkend="install-acs-port80"/>. 

     </para>   

         
<informaltable>
<tgroup cols="2">
<tbody>
          <row>
            <entry><phrase>Variable to replace</phrase></entry>

            <entry><phrase>Target Valuee</phrase></entry>
          </row>

          <row>
            <entry>service_database_username</entry>

            <entry>service_name</entry>
          </row>

          <row>
            <entry>service_database_password</entry>

            <entry>database_password</entry>
          </row>

          <row>
            <entry>AOL_HOME</entry>

            <entry>/home/aol31</entry>
          </row>

          <row>
            <entry>service_short_name</entry>

            <entry>service_name</entry>
          </row>

          <row>
            <entry>service_short_description</entry>

            <entry>a description of your service</entry>
          </row>

          <row>
            <entry>service_email</entry>

            <entry>the email address of the maintainer</entry>
          </row>

          <row>
            <entry>ACS_HOME</entry>

            <entry>/web/service_name</entry>
          </row>

          <row>
            <entry>service_ip_address</entry>

            <entry>your ip address</entry>
          </row>

          <row>
            <entry>service_ip_name</entry>

            <entry>your dns name</entry>
          </row>

          <row>
            <entry>service_port</entry>

            <entry>what port to use (80 is standard HTTP port)</entry>
          </row>

          <row>
            <entry>service_ip_address_ssl</entry>

            <entry>disabled by default</entry>
          </row>

          <row>
            <entry>service_ip_name_ssl</entry>

            <entry>disabled by default</entry>
          </row>

          <row>
            <entry>service_port_ssl}</entry>

            <entry>disabled by default</entry>
          </row>
        </tbody></tgroup></informaltable>

        
    </listitem>

      <listitem><para>
        Copy this <ulink url="files/nsd-oracle.txt">nsd-oracle</ulink> script into
        <phrase>/tmp/nsd-oracle.txt</phrase>: </para>
<programlisting>
$ cd /usr/local/aolserver/bin
$ cp /tmp/nsd-oracle.txt ./nsd-oracle
$ chmod 700 /usr/local/aolserver/bin/nsd-oracle
   
</programlisting>

        <para>If you deviated from the <ulink url="oracle.html#defaults">Oracle</ulink>
        installation defaults we specified, edit <phrase>nsd-oracle</phrase>
        as necessary.
      </para></listitem>

      <listitem><para>
        Kill any current running AOLserver processes and start a new one: </para>
<programlisting>
$ killall -9 nsd
; Should probably see:
nsd: no process killed    
$ /usr/local/aolserver/bin/nsd-oracle -c /home/aol31/servername.ini
   
</programlisting>

        <para>Attempt to connect to the service from a web browser as you did in
        the <ulink url="aolserver.html#install">AOLserver documentation</ulink>. You
        should specify a URL like:</para>
<programlisting>
http://<emphasis>ip_name</emphasis>:<emphasis>ip_port</emphasis>/
   
</programlisting>

        <para>You should see a page that looks like <ulink url="files/acs-start.html">this</ulink> - if so, go on to the next
        section.</para>

        <para>If you don&#39;t see the login page, view your error log
        (<phrase>/home/aol31/log/servername-error.log</phrase>) to make sure
        the service is starting without any problems. If you need to make
        changes, don&#39;t forget to kill any running servers.</para>
<programlisting>
$ killall -9 nsd
   
</programlisting>
      </listitem>
    </itemizedlist>

    </sect2>

<sect2 id="install-acs-using-installer">
<title>Using the ACS Installer</title>


    <para>Assuming you got your AOLserver up and running previously,</para>

    <itemizedlist>
      <listitem><para>
        You should see a page from the webserver titled <phrase>ACS
        Installation: Welcome</phrase>. You will be warned if your version of
        the Oracle driver is out of date, if AOLserver cannot connect to the
        database, or if there are any problems with filesystem permissions on
        the server side. But if everything is fine, you can click
        <phrase>Next</phrase> to proceed to load the ACS Kernel data model. 

        
      </para></listitem>

      <listitem><para>
        The next page shows the results of loading the ACS Kernel data model
        - be prepared to wait 20-30 seconds as it works. You should see a
        string of &quot;No errors.&quot; as the tables are created in Oracle.
        Finally, another <phrase>Next</phrase> button will appear at the
        bottom - click it. 

        
      </para></listitem>

      <listitem><para>
        The following page shows the results of loading the package data
        models. You should see positive results for each of the previously
        selected packages, but watch out for any errors. Eventually, the page
        will display &quot;Done installing packages.&quot; - click
        <phrase>Create Administrator</phrase>. 

        
      </para></listitem>

      <listitem><para>
        You should see a page, &quot;ACS Installation: Create
        Administrator&quot; with form fields to define the ACS site
        administrator. Fill out the fields as appropriate, and click
        <phrase>Create User</phrase>. 

        
      </para></listitem>

      <listitem><para>
        You should see a page, &quot;ACS Installation: Set System
        Information&quot; allowing you to essentially name your service. Fill
        out the fields as appropriate, and click <phrase>Set System
        Information</phrase> 

        
      </para></listitem>

      <listitem><para>
        You&#39;ll see the final Installer page, &quot;ACS Installation:
        Complete.&quot; It will tell you that the server is being restarted;
        note that unless you already added your AOLserver entry to the
        inittab, you&#39;ll need to manually restart your service. 

        
      </para></listitem>

      <listitem><para>After the server restarts and you reload the final page above, you
      should see a login screen, asking for your email address and password.
      Congratulations, ACS 4 is now up and running.</para></listitem>
    </itemizedlist>


    </sect2>

<sect2 id="install-acs-troubleshooting">
<title>Troubleshooting</title>


    <para>If you can&#39;t get to the login page, check for one of the below
    errors:</para>

    <itemizedlist>
      <listitem><para>
        If you don&#39;t see a page at all.</para>

        <para>Check the log file. Make sure there is a line like:</para>
<programlisting>
Notice: nssock: listening on http://localhost.localdomain:8000
  
</programlisting>
<para>
        If you can&#39;t find this line, look for a line specifying an error
        listening to a port. Such errors are caused if another process is
        listening to that port or if you don&#39;t have permission to access
        the port. Try using another port, perhaps 8086. You specify the port
        in <computeroutput>/home/aol30/service_name.ini</computeroutput> under
        <computeroutput>[ns/server/service_name/module/nssock]</computeroutput> Here is a sample
        for a computer programmed to listen to 127.0.0.1:8080. Try replacing
        the entries in your file with this one. </para>
<programlisting>
[ns/server/service_name/module/nssock]
timeout=120
Address=127.0.0.1
Hostname=127.0.0.1
Port=8080
</programlisting>
      </listitem>

      <listitem><para>Carefully scan the error log file for other entries flagged as
      errors. If you can&#39;t figure out what is wrong, try posting to the
      <ulink url="http://www.arsdigita.com/bboard/q-and-a.tcl?topic_id=21">web/db
      bboard</ulink>.</para></listitem>
    </itemizedlist>

 

    </sect2>

<sect2 id="install-acs-keepalive">
<title>Ensure that Your Service Automatically Starts on Boot (or any other
    time the service dies)</title>


    <para>This step should be completed as root. This can break every service on
    your machine, so proceed with caution.</para>

    

    <itemizedlist>
      <listitem><para>
        Copy this <ulink url="files/restart-aolserver.txt">restart-aolserver</ulink> into
        <phrase>/tmp/restart-aolserver.txt</phrase>. 

        
      </para></listitem>

      <listitem><para>
        This script needs to be SUID-root, which means that the script will
        run as root. This is necessary to ensure that the aolserver processes
        are killed regardless of who owns them. However the script should be
        executable by the <phrase>web</phrase> group to ensure that the users
        updating the web page can use the script, but that general system
        users cannot run the script. You also need to have Perl installed and
        also a symbolic link to it in <computeroutput>/usr/local/bin</computeroutput>. </para>
<programlisting>
$ su - 
; Enter root password.    
# cp /tmp/restart-aolserver.txt /usr/local/bin/restart-aolserver
# chown root.web /usr/local/bin/restart-aolserver
# chmod 4750 /usr/local/bin/restart-aolserver
# ln -s /usr/bin/perl /usr/local/bin/perl
# su - nsadmin
</programlisting>
      </listitem>

      <listitem><para>
        Test the <phrase>restart-aolserver</phrase> script by making sure all
        servers are dead, starting a new server, and then killing it. You
        should see the following lines. </para>
<programlisting>
$ killall -9 nsd
nsd: no process killed
$ /usr/local/aolserver/bin/nsd-oracle -c /home/aol31/service_name.ini
$ restart-aolserver service_name
Killing 23727 23728 23729 23730
$ killall -9 nsd
nsd: no process killed
</programlisting>
<para>        The numbers indicate the process ids (PIDs) of the processes being
        killed. It is important that no processes are killed by the second
        call to <computeroutput>killall</computeroutput>. If there are processes being killed, it
        means that the script is not working. 

        
      </para></listitem>

      <listitem><para>
        Assuming that the <phrase>restart-aolserver</phrase> script worked,
        login as root and open <computeroutput>/etc/inittab</computeroutput> for editing. </para>
<programlisting>
$ su -
; Enter root password
# emacs -nw /etc/inittab    
</programlisting>
      </listitem>

      <listitem><para>
        Copy this line into the bottom of the file as a template, making sure
        that the first field <phrase>nss</phrase> is unique. </para>
<programlisting>
nss:2345:respawn:/usr/local/aolserver/bin/nsd-oracle -i -c /home/aol31/<emphasis>service_name</emphasis>.ini
</programlisting>
      </listitem>

      <listitem><para><phrase>Important:</phrase> Make sure there is a newline at
      the end of the file. If there is not a newline at the end of the file,
      the system may suffer catastrophic failures.</para></listitem>

      <listitem><para>
        Still as root, enter the following command to re-initialize
        <computeroutput>/etc/inittab</computeroutput>. </para>
<programlisting>
# killall -9 nsd    
# /sbin/init q
</programlisting>

        
      </listitem>

      <listitem><para>
        <phrase>Important:</phrase> See if it worked by running the
        restart-aolserver script again. </para>
<programlisting>
# restart-aolserver <emphasis>service_name</emphasis>
Killing 23750 23753 23754 23756
</programlisting>
     </listitem>
    </itemizedlist>
   <para> If the processes were killed, congratulations, your server is now
    automated for startup and shutdown. On to the <ulink url="tests.html">Acceptance Tests!</ulink></para>


    </sect2>

<sect2 id="install-acs-transfer">
<title>How to Transfer Data</title>
<para>
    If you are moving the service from one location to another, export code
    for the old database and import into the new. If your database has been
    hosed and you want to restore a backup, use the <computeroutput>imp</computeroutput> command.
    These commands can be run from the shell, you don&#39;t need to use
    <computeroutput>sqlplus</computeroutput>. To export:</para>
<programlisting>
exp <emphasis>service_name</emphasis>/<emphasis>database_password</emphasis> file=foo.dmp consistent=y full=y
</programlisting>

    <para>To import:</para>
<programlisting>
imp <emphasis>service_name</emphasis>/<emphasis>database_password</emphasis> file=foo.dmp [fromuser=olduser touser=<emphasis>service_name</emphasis>]
</programlisting>
  

    </sect2>

<sect2 id="install-acs-port80">
<title>Running AOLserver on Port 80</title>
<para>
    If you want to run the service on port 80 (the default HTTP port), you
    need to add some additional settings to your
    <computeroutput>service_name.ini</computeroutput> file in <computeroutput>/home/aol30</computeroutput>. Under the
    <computeroutput>[ns/parameters]</computeroutput> section, ensure that there is an entry </para>
<programlisting>
User=nsadmin
</programlisting>
<para>    Moreover, you will need to start the service as <phrase>root</phrase>. If
    you follow the instructions above for <link linkend="install-acs-keepalive">automating
    startup</link>, this will be taken care of, but if you ever start the server
    from the command line, be sure to <phrase>su -</phrase> first.</para>

    <para>These steps are required because port 80 is a <emphasis>privileged</emphasis>
    port. Only certain users can claim it. When you start
    <phrase>nsd</phrase> as root, it obtains the port, and then changes to
    run as whatever user you specify in the server configuration file. This
    ensures a high level of security, as the server, once started, is not
    running as <phrase>root</phrase>. This mean that if someone was able to
    exploit your web server to execute a command on your server, they would
    not be able to gain <phrase>root</phrase> access.</para>

  

    </sect2>

<sect2 id="install-acs-delete-tablespace">
<title>Deleting a tablespace</title>
<para>
    Should it become necessary to rebuild a tablespace from scratch, you can
    use the <computeroutput>drop user</computeroutput> command with the <computeroutput>cascade</computeroutput>
    option. This command will drop the user and every database object the
    user owns.</para> 
<programlisting>
drop user
<emphasis>service_name</emphasis> cascade;
</programlisting>

    <para>If this does not work because svrmgrl &quot;cannot drop a user that is
    currently connected&quot;, make sure to kill the AOLserver using this
    user. If it still does not work, do:</para>
<programlisting>
 select username, sid, serial# from v$session where username=&#39;<emphasis>service_name</emphasis>&#39;;
</programlisting>

    <para>and then</para>
<programlisting>
alter system kill session &#39;<emphasis>sid</emphasis>,<emphasis>serial#</emphasis>&#39;;
</programlisting>

    <para>where <emphasis>sid</emphasis> and <emphasis>serial#</emphasis> are replaced with the
    corresponding values for the open session.</para>

    <para><phrase>Use with caution!</phrase></para>

    <para>If you feel the need to delete <emphasis>everything</emphasis> related to the
    service, you can also issue the following:</para>
<programlisting>
drop tablespace <emphasis>service_name</emphasis> including contents cascade constraints;
</programlisting>
   

    </sect2>

<sect2 id="install-acs-backup">
<title>Set Up Nightly Oracle Exports</title>


    <para>While you&#39;re working with Oracle, you should configure it to do
    automatic exports. An export is a separate backup copy of the database.
    This copy includes all of the database&#39;s state at the time that the
    export was initiated. If your database is corrupted, you can restore from
    one of these backups (see <xref linkend="install-acs-transfer"/>). You should
    do this step as <phrase>root</phrase>.</para>

    <itemizedlist>
      <listitem><para>
        Download the backup script. Save the file <ulink url="files/export-oracle.txt">export-oracle.txt</ulink> as
        <phrase>/tmp/export-oracle.txt</phrase>. 

        
      </para></listitem>

      <listitem><para>
        Login as root. The following commands will install the export script:
       </para> 
<programlisting>
$ su -
; Enter root password
# cp /tmp/export-oracle.txt /usr/sbin/export-oracle
# chmod 700 /usr/sbin/export-oracle
   
</programlisting>
      </listitem>

      <listitem><para>
        Setup the export directory; this is the directory where backups will
        be stored. We recommend the directory
        <computeroutput>/ora8/m02/oracle-exports</computeroutput>. </para>
<programlisting>
# mkdir /ora8/m02/oracle-exports
# chown oracle.dba /ora8/m02/oracle-exports
# chmod 770 /ora8/m02/oracle-exports
   
</programlisting>
      </listitem>

      <listitem><para>
        Now edit <computeroutput>/usr/sbin/export-oracle</computeroutput> and change the
        <computeroutput>SERVICE_NAME</computeroutput> and <computeroutput>DATABASE_PASSWORD</computeroutput> fields
        to their correct values. If you want to use a directory other than
        <computeroutput>/ora8/m02/oracle-exports</computeroutput>, you also need to change the
        <computeroutput>exportdir</computeroutput> setting. 
</para>
        <para>Test the export procedure by running the command:</para>
<programlisting>
# /usr/sbin/export-oracle
mv: /ora8/m02/oracle-exports/oraexport-service_name.dmp.gz: No such file or directory

Export: Release 8.1.6.1.0 - Production on Sun Jun 11 18:07:45 2000

(c) Copyright 1999 Oracle Corporation.  All rights reserved.


Connected to: Oracle8i Enterprise Edition Release 8.1.6.1.0 - Production
With the Partitioning option
JServer Release 8.1.6.0.0 - Production
Export done in US7ASCII character set and US7ASCII NCHAR character set
. exporting pre-schema procedural objects and actions
. exporting foreign function library names for user SERVICE_NAME 
. exporting object type definitions for user SERVICE_NAME 
About to export SERVICE_NAME&#39;s objects ...
. exporting database links
. exporting sequence numbers
. exporting cluster definitions
. about to export SERVICE_NAME&#39;s tables via Conventional Path ...
. exporting synonyms
. exporting views
. exporting stored procedures
. exporting operators
. exporting referential integrity constraints
. exporting triggers
. exporting indextypes
. exporting bitmap, functional and extensible indexes
. exporting posttables actions
. exporting snapshots
. exporting snapshot logs
. exporting job queues
. exporting refresh groups and children
. exporting dimensions
. exporting post-schema procedural objects and actions
. exporting statistics
Export terminated successfully without warnings.
   
</programlisting>

        <para>If you don&#39;t have any warnings, proceed to automate the
        backups.</para>
      </listitem>

      <listitem><para>
        Automating backups is accomplished using the UNIX
        <phrase>crontab</phrase> facility.</para>

        <para>While still <phrase>root</phrase>, run the following command. You
        can replace the <computeroutput>EDITOR=&quot;emacs -nw&quot;</computeroutput> portion
        with whatever editor your prefer, such as <computeroutput>EDITOR=vi</computeroutput>.</para>
<programlisting>
# export EDITOR=&quot;emacs -nw&quot;
# crontab -e
   
</programlisting>
<para>        Now add the following line on a line by itself </para>
<programlisting>
0 23 * * * /usr/sbin/export-oracle
   
</programlisting>

        <para>Save the file, exit the editor. Verify that the addition succeeded
        by checking the output of the following command.</para>
<programlisting>
# crontab -l | grep export-oracle
0 23 * * * /usr/sbin/export-oracle
# exit
; Logout
   
</programlisting>
      <para>  If you see the line, go ahead and log out.
      </para></listitem>
    </itemizedlist>
   
 

 
<para><phrase role="cvstag">($Id$)</phrase></para>
</sect2>
</sect1>

